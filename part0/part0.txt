0.1: HTML

Review the basics of HTML by reading this tutorial from Mozilla: HTML tutorial.

This exercise is not submitted to GitHub, it's enough to just read the tutorial

0.2: CSS

Review the basics of CSS by reading this tutorial from Mozilla: CSS tutorial.

This exercise is not submitted to GitHub, it's enough to just read the tutorial

0.3: HTML forms

Learn about the basics of HTML forms by reading Mozilla's tutorial Your first form.

This exercise is not submitted to GitHub, it's enough to just read the tutorial

0.4: New note

Create a similar diagram depicting the situation where the user creates a new note on 
page https://studies.cs.helsinki.fi/exampleapp/notes when writing something into the 
text field and clicking the submit button. 

#############################################################################
note over browser:
User inserts text content on the form input,
and clicks the submit button.
end note over 

browser->server: HTTP POST https://studies.cs.helsinki.fi/exampleapp/new_note

note over server:
server executes code for creating and 
persisting the note and returns a response
end note over

server-->browser: HTTP Response with code 302 (Redirection)
note over browser:
Browser redirects to the value received 
on the Response Header: Location
end note over 

browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/notes
server-->browser: HTML-code
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
server-->browser: main.css
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.js
server-->browser: main.js
note over browser:
Once the main.js file is received and gets loaded,
a request for fetching all the notes is performed
end note over 

browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
server-->browser: data.json
#############################################################################

0.5: Single page app

Create a diagram depicting the situation where the user goes to the single page app 
version of the notes app at https://studies.cs.helsinki.fi/exampleapp/spa.

#############################################################################
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa
server-->browser: HTML-code
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
server-->browser: main.css
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa.js
server-->browser: spa.js
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
server-->browser: data.json
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/favicon.ico
server-->browser: favicon.icon
#############################################################################

0.6: New note

Create a diagram depicting the situation where the user creates a new note using the single page version of the app.

#############################################################################
note over browser:
before sending the note information to the server, 
the note is created in the browser and atached to 
the existing note list
end note over 

browser->server: HTTP POST https://studies.cs.helsinki.fi/exampleapp/new_note_spa

note over server:
Both the Request and the Response contains 
the Header: 'Content-type', 'application/json'
to correctly identify the type of data that
is being sent
end note over 

server-->browser: {message: "note created"}
#############################################################################
This was the last exercise, and it's time to push your answers to GitHub and mark the exercises as done in the submission system.